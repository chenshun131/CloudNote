<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd

                  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
                  http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

    <!-- 连接池配置文件 -->
    <context:property-placeholder location="classpath:props/config.properties"/>

    <!-- 基础数据源配置，这样可以方便切换数据源 -->
    <bean id="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <!-- 配置初始化大小、最小空闲连接数、最大空闲连接数 -->
        <property name="initialSize" value="${druid.initialSize}"/>
        <property name="minIdle" value="${druid.minIdle}"/>
        <property name="maxActive" value="${druid.maxActive}"/>
        <!-- 最大超時等待时间 -->
        <property name="maxWait" value="${druid.maxWait}"/>
        <property name="defaultAutoCommit" value="false"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 超时时间；单位为秒(180秒=3分钟) -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="false"/>
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <property name="filters" value="mergeStat"/>

        <!-- 测试信息配置 -->
        <!-- 用来检测连接是否有效的sql,要求是一个查询语句 -->
        <property name="validationQuery" value="SELECT 'x'"/>
        <!-- 申请连接的时候检测，如果空闲时间大于，建议配置为true,不影响性能,并且保证安全性 -->
        <property name="testWhileIdle" value="true"/>
        <!-- 申请连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能 -->
        <property name="testOnBorrow" value="false"/>
        <!-- 归还连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能 -->
        <property name="testOnReturn" value="false"/>
    </bean>

    <!-- 数据源配置 -->
    <bean id="dataSource" parent="baseDataSource" init-method="init">
        <!-- Connection Info -->
        <property name="driverClassName" value="${master.driver}"/>
        <property name="url" value="${master.url}"/>
        <property name="username" value="${master.username}"/>
        <property name="password" value="${master.password}"/>
    </bean>

    <!-- TransactionManager 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- http client -->
    <bean id="simpleHttpClient" class="com.chenshun.utils.web.SimpleHttpClient"/>

    <!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- mybatis 配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:mappers/**/*Mapper.xml"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.chenshun.studyapp.dao"/>
    </bean>

    <!-- MongoDB Start -->
    <!-- 单机:host port  集群:replica-set="${mongo.replicaSet}" credentials的配置形式是：用户名:密码@默认数据库 -->
    <mongo:mongo-client id="mongoClient" host="${mongo.host}" port="${mongo.port}"
                        credentials="${mongo.username}:${mongo.password}@${mongo.databaseName}">
        <mongo:client-options
                write-concern="SAFE"
                connections-per-host="${mongo.connectionsPerHost}"
                threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
                connect-timeout="${mongo.connectTimeout}"
                max-wait-time="${mongo.maxWaitTime}"
                socket-keep-alive="${mongo.socketKeepAlive}"
                socket-timeout="${mongo.socketTimeout}"/>
    </mongo:mongo-client>

    <mongo:db-factory id="mongoDbFactory" dbname="${mongo.databaseName}" mongo-ref="mongoClient"/>
    <!-- MongoDB GridFS Template 支持，操作mongodb存放的文件 -->
    <mongo:mapping-converter id="mongoConverter" db-factory-ref="mongoDbFactory"/>

    <bean id="gridFsTemplate" class="org.springframework.data.mongodb.gridfs.GridFsTemplate">
        <constructor-arg ref="mongoDbFactory"/>
        <constructor-arg ref="mongoConverter"/>
    </bean>
    <!-- mongo模板操作对象 -->
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
    </bean>
    <!-- MongoDB End -->

</beans>
